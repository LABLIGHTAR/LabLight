// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class OrganizationNoticeHandle : RemoteTableHandle<EventContext, OrganizationNotice>
        {
            protected override string RemoteTableName => "organization_notice";

            public sealed class ExpiresAtIndex : BTreeIndexBase<SpacetimeDB.Timestamp>
            {
                protected override SpacetimeDB.Timestamp GetKey(OrganizationNotice row) => row.ExpiresAt;

                public ExpiresAtIndex(OrganizationNoticeHandle table) : base(table) { }
            }

            public readonly ExpiresAtIndex ExpiresAt;

            public sealed class NoticeIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(OrganizationNotice row) => row.NoticeId;

                public NoticeIdUniqueIndex(OrganizationNoticeHandle table) : base(table) { }
            }

            public readonly NoticeIdUniqueIndex NoticeId;

            public sealed class OrganizationIdIndex : BTreeIndexBase<uint>
            {
                protected override uint GetKey(OrganizationNotice row) => row.OrganizationId;

                public OrganizationIdIndex(OrganizationNoticeHandle table) : base(table) { }
            }

            public readonly OrganizationIdIndex OrganizationId;

            public sealed class PosterIdentityIndex : BTreeIndexBase<SpacetimeDB.Identity>
            {
                protected override SpacetimeDB.Identity GetKey(OrganizationNotice row) => row.PosterIdentity;

                public PosterIdentityIndex(OrganizationNoticeHandle table) : base(table) { }
            }

            public readonly PosterIdentityIndex PosterIdentity;

            internal OrganizationNoticeHandle(DbConnection conn) : base(conn)
            {
                ExpiresAt = new(this);
                NoticeId = new(this);
                OrganizationId = new(this);
                PosterIdentity = new(this);
            }

            protected override object GetPrimaryKey(OrganizationNotice row) => row.NoticeId;
        }

        public readonly OrganizationNoticeHandle OrganizationNotice;
    }
}
