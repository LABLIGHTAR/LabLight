// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void RunOrganizationNoticeCleanupHandler(ReducerEventContext ctx, OrganizationNoticeCleanupTimer timer);
        public event RunOrganizationNoticeCleanupHandler? OnRunOrganizationNoticeCleanup;

        public void RunOrganizationNoticeCleanup(OrganizationNoticeCleanupTimer timer)
        {
            conn.InternalCallReducer(new Reducer.RunOrganizationNoticeCleanup(timer), this.SetCallReducerFlags.RunOrganizationNoticeCleanupFlags);
        }

        public bool InvokeRunOrganizationNoticeCleanup(ReducerEventContext ctx, Reducer.RunOrganizationNoticeCleanup args)
        {
            if (OnRunOrganizationNoticeCleanup == null) return false;
            OnRunOrganizationNoticeCleanup(
                ctx,
                args.Timer
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class RunOrganizationNoticeCleanup : Reducer, IReducerArgs
        {
            [DataMember(Name = "_timer")]
            public OrganizationNoticeCleanupTimer Timer;

            public RunOrganizationNoticeCleanup(OrganizationNoticeCleanupTimer Timer)
            {
                this.Timer = Timer;
            }

            public RunOrganizationNoticeCleanup()
            {
                this.Timer = new();
            }

            string IReducerArgs.ReducerName => "run_organization_notice_cleanup";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags RunOrganizationNoticeCleanupFlags;
        public void RunOrganizationNoticeCleanup(CallReducerFlags flags) => RunOrganizationNoticeCleanupFlags = flags;
    }
}
