// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void TryScheduleProtocolTaskHandler(ReducerEventContext ctx, uint organizationId, uint protocolId, uint protocolStateId, System.Collections.Generic.List<SpacetimeDB.Identity> assigneeIdentities, uint startStep, uint endStep, SpacetimeDB.Timestamp scheduledAt, SpacetimeDB.Timestamp dueAt);
        public event TryScheduleProtocolTaskHandler? OnTryScheduleProtocolTask;

        public void TryScheduleProtocolTask(uint organizationId, uint protocolId, uint protocolStateId, System.Collections.Generic.List<SpacetimeDB.Identity> assigneeIdentities, uint startStep, uint endStep, SpacetimeDB.Timestamp scheduledAt, SpacetimeDB.Timestamp dueAt)
        {
            conn.InternalCallReducer(new Reducer.TryScheduleProtocolTask(organizationId, protocolId, protocolStateId, assigneeIdentities, startStep, endStep, scheduledAt, dueAt), this.SetCallReducerFlags.TryScheduleProtocolTaskFlags);
        }

        public bool InvokeTryScheduleProtocolTask(ReducerEventContext ctx, Reducer.TryScheduleProtocolTask args)
        {
            if (OnTryScheduleProtocolTask == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnTryScheduleProtocolTask(
                ctx,
                args.OrganizationId,
                args.ProtocolId,
                args.ProtocolStateId,
                args.AssigneeIdentities,
                args.StartStep,
                args.EndStep,
                args.ScheduledAt,
                args.DueAt
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class TryScheduleProtocolTask : Reducer, IReducerArgs
        {
            [DataMember(Name = "organization_id")]
            public uint OrganizationId;
            [DataMember(Name = "protocol_id")]
            public uint ProtocolId;
            [DataMember(Name = "protocol_state_id")]
            public uint ProtocolStateId;
            [DataMember(Name = "assignee_identities")]
            public System.Collections.Generic.List<SpacetimeDB.Identity> AssigneeIdentities;
            [DataMember(Name = "start_step")]
            public uint StartStep;
            [DataMember(Name = "end_step")]
            public uint EndStep;
            [DataMember(Name = "scheduled_at")]
            public SpacetimeDB.Timestamp ScheduledAt;
            [DataMember(Name = "due_at")]
            public SpacetimeDB.Timestamp DueAt;

            public TryScheduleProtocolTask(
                uint OrganizationId,
                uint ProtocolId,
                uint ProtocolStateId,
                System.Collections.Generic.List<SpacetimeDB.Identity> AssigneeIdentities,
                uint StartStep,
                uint EndStep,
                SpacetimeDB.Timestamp ScheduledAt,
                SpacetimeDB.Timestamp DueAt
            )
            {
                this.OrganizationId = OrganizationId;
                this.ProtocolId = ProtocolId;
                this.ProtocolStateId = ProtocolStateId;
                this.AssigneeIdentities = AssigneeIdentities;
                this.StartStep = StartStep;
                this.EndStep = EndStep;
                this.ScheduledAt = ScheduledAt;
                this.DueAt = DueAt;
            }

            public TryScheduleProtocolTask()
            {
                this.AssigneeIdentities = new();
            }

            string IReducerArgs.ReducerName => "try_schedule_protocol_task";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags TryScheduleProtocolTaskFlags;
        public void TryScheduleProtocolTask(CallReducerFlags flags) => TryScheduleProtocolTaskFlags = flags;
    }
}
